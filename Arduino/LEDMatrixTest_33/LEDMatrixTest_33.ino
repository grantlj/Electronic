/*
const int rowCount = 8;
const int colCount = 8;
const int rowPin[] = {2,11,0,19,18,17,16,15};
const int colPin[] = {3,4,5,6,7,8,9,10};
*/


const int rowCount = 3;
const int colCount = 3;
const int rowPin[rowCount] = {15,16,17};
const int colPin[colCount] = {3,4,5};

const int nums[1][rowCount][colCount]=
{ {{1,1,1},
  {0,0,1},
  {1,1,1}}};

/*const int nums[][][]={ 
	{   {1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},
	
	    
	{	{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0}},
			
{    	{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},

	{	{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},

	{	{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0}},
		
	{	{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},

	{	{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},

  
	{	{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0}},
		
	{	{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}},

	{	{1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,1},
		{0,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0}}


        

        

};
*/

		

void setup()
{
	Serial.begin(9600);
	//Serial.println("hello");
	reset();
}

void reset()
{
  
	for (int i=0;i < rowCount;i++)
	{
		pinMode(rowPin[i], OUTPUT);
		digitalWrite(rowPin[i], LOW);
	}
	for (int i=0;i < colCount;i++)
	{
		pinMode(colPin[i], OUTPUT);
		digitalWrite(colPin[i], HIGH);
	}	

}
void loop()
{
	reset();
	//digitalWrite(rowPin[1], HIGH);
	//digitalWrite(colPin[7], LOW);
	for (int i=0;i < 9;i++)
	{
		showDigital(i);
		delay(2000);
	}

}

void showDigital(int x)
{
	for (int round=0;round < 20;round++)	
	{
		for (int i=0;i < rowCount;i++)
		{
			reset();
			delay(10);
			digitalWrite(rowPin[i], HIGH);
			for (int j=0;j < colCount;j++)
				if (nums[x][ i][ j] == 1) digitalWrite(colPin[j], LOW);
		}
		delay(300);
	}
}

/*
void debugAll()
{
	Serial.print("Row:");	
	for (int i=0;i < rowCount;i++)
		Serial.print(rowPin[i] + "is " + digitalRead(rowPin[i]) + "   ");
	Serial.println();
	

}*/
