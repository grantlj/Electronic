import com.virtualbreadboard.interfaces.*;
import com.muvium.compatibility.arduino.*; 
class Class0 extends com.muvium.compatibility.arduino.Arduino{//Automatically Added VBB Framework Code - do not remove
static final int rowCount = 8; //!>0:0
static final int colCount = 8; //!>0:1
static final int rowPin[] = {2,11,0,19,18,17,16,15}; //!>0:2
static final int colPin[] = {3,4,5,6,7,8,9,10}; //!>0:3
 //!>0:4
static final int nums[][][]={  //!>0:5
	{   {1,1,1,1,1,1,1,1}, //!>0:6
		{1,0,0,0,0,0,0,1}, //!>0:7
		{1,0,0,0,0,0,0,1}, //!>0:8
		{1,0,0,0,0,0,0,1}, //!>0:9
		{1,0,0,0,0,0,0,1}, //!>0:10
		{1,0,0,0,0,0,0,1}, //!>0:11
		{1,1,1,1,1,1,1,1}, //!>0:12
		{0,0,0,0,0,0,0,0}}, //!>0:13
	 //!>0:14
	     //!>0:15
	{	{0,0,0,0,0,0,0,1}, //!>0:16
		{0,0,0,0,0,0,0,1}, //!>0:17
		{0,0,0,0,0,0,0,1}, //!>0:18
		{0,0,0,0,0,0,0,1}, //!>0:19
		{0,0,0,0,0,0,0,1}, //!>0:20
		{0,0,0,0,0,0,0,1}, //!>0:21
		{0,0,0,0,0,0,0,1}, //!>0:22
		{0,0,0,0,0,0,0,0}}, //!>0:23
			 //!>0:24
{    	{1,1,1,1,1,1,1,1}, //!>0:25
		{0,0,0,0,0,0,0,1}, //!>0:26
		{0,0,0,0,0,0,0,1}, //!>0:27
		{1,1,1,1,1,1,1,1}, //!>0:28
		{1,0,0,0,0,0,0,0}, //!>0:29
		{1,0,0,0,0,0,0,0}, //!>0:30
		{1,1,1,1,1,1,1,1}, //!>0:31
		{0,0,0,0,0,0,0,0}}, //!>0:32
 //!>0:33
	{	{1,1,1,1,1,1,1,1}, //!>0:34
		{0,0,0,0,0,0,0,1}, //!>0:35
		{0,0,0,0,0,0,0,1}, //!>0:36
		{1,1,1,1,1,1,1,1}, //!>0:37
		{0,0,0,0,0,0,0,1}, //!>0:38
		{0,0,0,0,0,0,0,1}, //!>0:39
		{1,1,1,1,1,1,1,1}, //!>0:40
		{0,0,0,0,0,0,0,0}}, //!>0:41
 //!>0:42
	{	{1,0,0,0,0,0,0,1}, //!>0:43
		{1,0,0,0,0,0,0,1}, //!>0:44
		{1,0,0,0,0,0,0,1}, //!>0:45
		{1,1,1,1,1,1,1,1}, //!>0:46
		{0,0,0,0,0,0,0,1}, //!>0:47
		{0,0,0,0,0,0,0,1}, //!>0:48
		{0,0,0,0,0,0,0,1}, //!>0:49
		{0,0,0,0,0,0,0,0}}, //!>0:50
		 //!>0:51
	{	{1,1,1,1,1,1,1,1}, //!>0:52
		{1,0,0,0,0,0,0,0}, //!>0:53
		{1,0,0,0,0,0,0,0}, //!>0:54
		{1,1,1,1,1,1,1,1}, //!>0:55
		{0,0,0,0,0,0,0,1}, //!>0:56
		{0,0,0,0,0,0,0,1}, //!>0:57
		{1,1,1,1,1,1,1,1}, //!>0:58
		{0,0,0,0,0,0,0,0}}, //!>0:59
 //!>0:60
	{	{1,1,1,1,1,1,1,1}, //!>0:61
		{1,0,0,0,0,0,0,0}, //!>0:62
		{1,0,0,0,0,0,0,0}, //!>0:63
		{1,1,1,1,1,1,1,1}, //!>0:64
		{1,0,0,0,0,0,0,1}, //!>0:65
		{1,0,0,0,0,0,0,1}, //!>0:66
		{1,1,1,1,1,1,1,1}, //!>0:67
		{0,0,0,0,0,0,0,0}}, //!>0:68
 //!>0:69
   //!>0:70
	{	{1,1,1,1,1,1,1,1}, //!>0:71
		{0,0,0,0,0,0,0,1}, //!>0:72
		{0,0,0,0,0,0,0,1}, //!>0:73
		{0,0,0,0,0,0,0,1}, //!>0:74
		{0,0,0,0,0,0,0,1}, //!>0:75
		{0,0,0,0,0,0,0,1}, //!>0:76
		{0,0,0,0,0,0,0,1}, //!>0:77
		{0,0,0,0,0,0,0,0}}, //!>0:78
		 //!>0:79
	{	{1,1,1,1,1,1,1,1}, //!>0:80
		{1,0,0,0,0,0,0,1}, //!>0:81
		{1,0,0,0,0,0,0,1}, //!>0:82
		{1,1,1,1,1,1,1,1}, //!>0:83
		{1,0,0,0,0,0,0,1}, //!>0:84
		{1,0,0,0,0,0,0,1}, //!>0:85
		{1,1,1,1,1,1,1,1}, //!>0:86
		{0,0,0,0,0,0,0,0}}, //!>0:87
 //!>0:88
	{	{1,1,1,1,1,1,1,1}, //!>0:89
		{1,0,0,0,0,0,0,1}, //!>0:90
		{1,0,0,0,0,0,0,1}, //!>0:91
		{1,1,1,1,1,1,1,1}, //!>0:92
		{0,0,0,0,0,0,0,1}, //!>0:93
		{0,0,0,0,0,0,0,1}, //!>0:94
		{0,1,1,1,1,1,1,1}, //!>0:95
		{0,0,0,0,0,0,0,0}} //!>0:96
 //!>0:97
 //!>0:98
         //!>0:99
 //!>0:100
         //!>0:101
 //!>0:102
}; //!>0:103
		 //!>0:104
 //!>0:105

public void setup() //!>0:106
{ //!>0:107
	Serial.begin(9600); //!>0:108
	//Serial.println("hello"); //!>0:109
	reset(); //!>0:110
} //!>0:111
 //!>0:112
void reset() //!>0:113
{ //!>0:114
   //!>0:115
	for (int i=0;i < rowCount;i++) //!>0:116
	{ //!>0:117
		pinMode(rowPin[i], OUTPUT); //!>0:118
		digitalWrite(rowPin[i], LOW); //!>0:119
	} //!>0:120
	for (int i=0;i < colCount;i++) //!>0:121
	{ //!>0:122
		pinMode(colPin[i], OUTPUT); //!>0:123
		digitalWrite(colPin[i], HIGH); //!>0:124
	}	 //!>0:125
 //!>0:126
} //!>0:127
public void loop() //!>0:128
{ //!>0:129
	reset(); //!>0:130
	//digitalWrite(rowPin[1], HIGH); //!>0:131
	//digitalWrite(colPin[7], LOW); //!>0:132
	for (int i=0;i < 9;i++) //!>0:133
	{ //!>0:134
		showDigital(i); //!>0:135
		delay(2000); //!>0:136
	} //!>0:137
 //!>0:138
} //!>0:139
 //!>0:140
void showDigital(int x) //!>0:141
{ //!>0:142
	for (int round=0;round < 20;round++)	 //!>0:143
	{ //!>0:144
		for (int i=0;i < rowCount;i++) //!>0:145
		{ //!>0:146
			reset(); //!>0:147
			delay(10); //!>0:148
			digitalWrite(rowPin[i], HIGH); //!>0:149
			for (int j=0;j < colCount;j++) //!>0:150
if( iff (nums[x][ i][ j] == 1)) digitalWrite(colPin[j], LOW); //!>0:151
		} //!>0:152
		delay(300); //!>0:153
	} //!>0:154
} //!>0:155
 //!>0:156
void debugAll() //!>0:157
{ //!>0:158
	Serial.print("Row:");	 //!>0:159
	for (int i=0;i < rowCount;i++) //!>0:160
		Serial.print(rowPin[i] + "is " + digitalRead(rowPin[i]) + "   "); //!>0:161
	Serial.println(); //!>0:162
	 //!>0:163
 //!>0:164
} //!>0:165

public static void main(String[] args ){ 
  new Class0().run(); }
};
